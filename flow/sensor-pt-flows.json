[
    {
        "id": "158fea19.4d1816",
        "type": "tab",
        "label": "sensor-pt-<MAC>",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3a86d54c.9dc61a",
        "type": "function",
        "z": "158fea19.4d1816",
        "name": "parse_temperature",
        "func": "var connected = false;\nvar t = 0;\n\nif (context.temperature === undefined) {\n\t// set initial value\n    context.temperature = 0;\n}\n\nif (msg.topic === \"temperature-unit\") {\n    context.temperature_unit = (msg.payload === true) ? \"Fahrenheit\" : \"Celsius\";\n    t = context.temperature;\n} else {\n    // update temperature\n    if (msg.payload.state === undefined ||\n        msg.payload.state.reported === undefined ||\n        msg.payload.state.reported.temperature === undefined) {\n        t = context.temperature;\n    } else {\n        t = msg.payload.state.reported.temperature / 10;\n        context.temperature = t;\n    }\n}\n\nif (msg.payload.state === undefined ||\n    msg.payload.state.reported === undefined ||\n    msg.payload.state.reported.connected === undefined) {\n    connected = false;\n} else {\n    connected = msg.payload.state.reported.connected;\n}\n\nt = context.temperature;\nif (context.temperature_unit === \"Fahrenheit\") {\n\t// convert temperature : [°F] = [°C] × 9⁄5 + 32\n    t = ((t * 9) / 5) + 32;\n    t = Math.round(t * 100) / 100;\n\tmsg = {payload:t, topic:\"°F\", enabled: connected, ui_control:{min:32, max:212, seg1:59, seg2:97}};\n} else {\n\tmsg = {payload:t, topic:\"°C\", enabled: connected, ui_control:{min:0, max:100, seg1:15, seg2:36}};\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 120,
        "wires": [
            [
                "95fa808f.e447e8"
            ]
        ]
    },
    {
        "id": "2af91c82.27c0ec",
        "type": "inject",
        "z": "158fea19.4d1816",
        "name": "",
        "topic": "",
        "payload": "{\"state\":{\"reported\":{\"humidity\":74,\"temperature\":218}},\"clientToken\":\"063762\"}",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 410,
        "y": 100,
        "wires": [
            [
                "19611877.44d3a"
            ]
        ]
    },
    {
        "id": "95fa808f.e447e8",
        "type": "ui_gauge",
        "z": "158fea19.4d1816",
        "name": "gauge_temperature",
        "group": "f6269529.17aba8",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "",
        "format": "{{value}}{{topic}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ffff00",
            "#00ff00",
            "#ca3838"
        ],
        "seg1": "15",
        "seg2": "36",
        "x": 1270,
        "y": 120,
        "wires": []
    },
    {
        "id": "a7a25e9e.564948",
        "type": "ui_switch",
        "z": "158fea19.4d1816",
        "name": "",
        "label": "Units: Celsius / Fahrenheit",
        "tooltip": "",
        "group": "f6269529.17aba8",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "temperature-unit",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 1060,
        "y": 180,
        "wires": [
            [
                "3a86d54c.9dc61a"
            ]
        ]
    },
    {
        "id": "5a27c49d.6245fc",
        "type": "function",
        "z": "158fea19.4d1816",
        "name": "parse_pressure",
        "func": "// update pressure\nvar connected = false;\nvar pressure = 0;\n\nif (context.pressure === undefined) {\n    context.pressure = 0;\n}\n\nif (msg.payload.state.reported.pressure === undefined) {\n    pressure = context.pressure;\n} else {\n    pressure = msg.payload.state.reported.pressure / 100;\n    context.pressure = pressure;\n}\n\nif (msg.payload.state.reported.connected === undefined) {\n    connected = false;\n} else {\n    connected = msg.payload.state.reported.connected;\n}\nmsg = {payload: pressure, enabled: connected};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 280,
        "wires": [
            [
                "e4c4628e.ba1868"
            ]
        ]
    },
    {
        "id": "e4c4628e.ba1868",
        "type": "ui_gauge",
        "z": "158fea19.4d1816",
        "name": "gauge_pressure",
        "group": "f6269529.17aba8",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Pressure",
        "label": "",
        "format": "{{value}}hPa",
        "min": "300",
        "max": "1100",
        "colors": [
            "#f9f566",
            "#00ff00",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1230,
        "y": 280,
        "wires": []
    },
    {
        "id": "b7066c81.9fa33",
        "type": "aws-mqtt in",
        "z": "158fea19.4d1816",
        "device": "fe44d137.3a8728",
        "topic": "$aws/things/sensor-pt-<MAC>/shadow/#",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "ca098217.01fc8"
            ]
        ]
    },
    {
        "id": "19611877.44d3a",
        "type": "json",
        "z": "158fea19.4d1816",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 610,
        "y": 220,
        "wires": [
            [
                "20677317.f5a8fc",
                "a1f3dee0.80d238"
            ]
        ]
    },
    {
        "id": "a3b95ccf.578128",
        "type": "ui_numeric",
        "z": "158fea19.4d1816",
        "name": "",
        "label": "Interval (s)",
        "tooltip": "",
        "group": "f6269529.17aba8",
        "order": 5,
        "width": "4",
        "height": "1",
        "wrap": false,
        "passthru": true,
        "topic": "",
        "format": "{{value}}",
        "min": "10",
        "max": "3600",
        "step": "10",
        "x": 350,
        "y": 520,
        "wires": [
            [
                "df71fa69.f24b7",
                "1cbf6a92.152bad"
            ]
        ]
    },
    {
        "id": "d00cfdd5.9d2a28",
        "type": "ui_button",
        "z": "158fea19.4d1816",
        "name": "",
        "group": "f6269529.17aba8",
        "order": 6,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "update",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "X",
        "payloadType": "str",
        "topic": "",
        "x": 590,
        "y": 580,
        "wires": [
            [
                "df71fa69.f24b7"
            ]
        ]
    },
    {
        "id": "a6ef3444.e70f7",
        "type": "inject",
        "z": "158fea19.4d1816",
        "name": "",
        "topic": "",
        "payload": "Started!",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "x": 120,
        "y": 580,
        "wires": [
            [
                "df71fa69.f24b7",
                "c777400b.0135b8"
            ]
        ]
    },
    {
        "id": "df71fa69.f24b7",
        "type": "function",
        "z": "158fea19.4d1816",
        "name": "interval_changed",
        "func": "var interval = context.get(\"INTERVAL\") || 0;\n\nif (msg.payload === \"Started!\") {\n    msg.enabled = false;\n    msg.topic = \"Z\";\n    return msg\n}\n\nif (msg.payload === \"X\") {\n    msg.enabled = false;\n    msg.topic = \"X\";\n    var token = Math.floor(Math.random() * 1000000);\n    msg.payload = \"{\\\"state\\\":{\\\"desired\\\":{\\\"interval\\\":\" + (interval * 1000) + \"}},\\\"clientToken\\\":\\\"\" + token + \"\\\"}\"\n    return msg\n}\n\nif (msg.topic == \"P\" ) {\n    msg.enabled = false;\n    context.set(\"INTERVAL\", msg.payload);\n    return msg;\n}\nmsg.enabled = true;\ncontext.set(\"INTERVAL\", msg.payload);\nmsg.topic = \"Y\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 580,
        "wires": [
            [
                "d00cfdd5.9d2a28",
                "58196dd7.731a74"
            ]
        ]
    },
    {
        "id": "58196dd7.731a74",
        "type": "switch",
        "z": "158fea19.4d1816",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "X",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 640,
        "wires": [
            [
                "2e2090e.481f2f"
            ]
        ]
    },
    {
        "id": "955a62af.0440a8",
        "type": "debug",
        "z": "158fea19.4d1816",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 890,
        "y": 640,
        "wires": []
    },
    {
        "id": "a85dbf5a.32bc88",
        "type": "aws-mqtt out",
        "z": "158fea19.4d1816",
        "device": "fe44d137.3a8728",
        "topic": "$aws/things/sensor-pt-<MAC>/shadow/update",
        "qos": "0",
        "x": 910,
        "y": 720,
        "wires": []
    },
    {
        "id": "eca52699.b904f8",
        "type": "inject",
        "z": "158fea19.4d1816",
        "name": "",
        "topic": "",
        "payload": "{\"state\":{\"desired\":{\"interval\":20000}},\"clientToken\":\"157570\"}",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 570,
        "y": 720,
        "wires": [
            [
                "a85dbf5a.32bc88",
                "955a62af.0440a8"
            ]
        ]
    },
    {
        "id": "2e2090e.481f2f",
        "type": "function",
        "z": "158fea19.4d1816",
        "name": "",
        "func": "return {payload: msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 640,
        "wires": [
            [
                "a85dbf5a.32bc88",
                "955a62af.0440a8"
            ]
        ]
    },
    {
        "id": "ca098217.01fc8",
        "type": "function",
        "z": "158fea19.4d1816",
        "name": "shadow-event-parser",
        "func": "var tokens = msg.topic.split(\"/\");\n\nif (tokens.length < 5 || tokens.length > 6) {\n    // invalid aws shadow topic element size\n    return null;\n}\n\nif (tokens[0] !== \"$aws\" && tokens[1] !== \"things\" && tokens[3] !== \"shadow\") {\n    // invalid aws shadow topic\n    return null;\n}\n\nvar thingName = tokens[2];\nvar shadowCommand = tokens[4];\nif (tokens.length == 6) {\n    shadowCommand = shadowCommand + \"/\" + tokens[5];\n}\n\nmsg.command = shadowCommand;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 200,
        "wires": [
            [
                "7e00ab06.e4b98c"
            ]
        ]
    },
    {
        "id": "b2473132.92f578",
        "type": "inject",
        "z": "158fea19.4d1816",
        "name": "",
        "topic": "$aws/things/sensor-pt-<MAC>/shadow/get/accepted",
        "payload": "{\"state\":{\"desired\":{\"interval\":20000},\"reported\":{\"interval\":20000,\"humidity\":74,\"temperature\":218}},\"metadata\":{\"desired\":{\"interval\":{\"timestamp\":1576116299}},\"reported\":{\"interval\":{\"timestamp\":1576047433},\"humidity\":{\"timestamp\":1576054069},\"temperature\":{\"timestamp\":1576054069}}},\"version\":198,\"timestamp\":1576116806}",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 90,
        "y": 320,
        "wires": [
            [
                "ca098217.01fc8"
            ]
        ]
    },
    {
        "id": "7e00ab06.e4b98c",
        "type": "switch",
        "z": "158fea19.4d1816",
        "name": "aws-shadow-event-dispatcher",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "update",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "get/accepted",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 260,
        "wires": [
            [
                "19611877.44d3a"
            ],
            [
                "6100799.60d9c88"
            ]
        ]
    },
    {
        "id": "42eadb8a.6c9074",
        "type": "comment",
        "z": "158fea19.4d1816",
        "name": "receive aws shadow event",
        "info": "",
        "x": 130,
        "y": 80,
        "wires": []
    },
    {
        "id": "4ae31e77.8f025",
        "type": "comment",
        "z": "158fea19.4d1816",
        "name": "parse 'update' data",
        "info": "",
        "x": 610,
        "y": 160,
        "wires": []
    },
    {
        "id": "aefe012c.e38418",
        "type": "comment",
        "z": "158fea19.4d1816",
        "name": "show temperature to gauge_ui",
        "info": "",
        "x": 1060,
        "y": 80,
        "wires": []
    },
    {
        "id": "a4e203d0.7edc7",
        "type": "comment",
        "z": "158fea19.4d1816",
        "name": "show pressure to gauge_ui",
        "info": "",
        "x": 1060,
        "y": 240,
        "wires": []
    },
    {
        "id": "5307b0d4.8ac088",
        "type": "function",
        "z": "158fea19.4d1816",
        "name": "parse_interval",
        "func": "// update interval value\nvar interval = msg.payload.state.reported.interval;\n// units = second;\nmsg.payload = Math.round(interval / 1000);\nmsg.topic = \"P\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 460,
        "wires": [
            [
                "a3b95ccf.578128"
            ]
        ]
    },
    {
        "id": "6100799.60d9c88",
        "type": "json",
        "z": "158fea19.4d1816",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 610,
        "y": 400,
        "wires": [
            [
                "20677317.f5a8fc",
                "2bb48c96.a888d4"
            ]
        ]
    },
    {
        "id": "4c7bb8e5.be83",
        "type": "comment",
        "z": "158fea19.4d1816",
        "name": "parse 'get' data",
        "info": "",
        "x": 600,
        "y": 320,
        "wires": []
    },
    {
        "id": "146ec122.475d8f",
        "type": "comment",
        "z": "158fea19.4d1816",
        "name": "configure device polling interval",
        "info": "",
        "x": 310,
        "y": 440,
        "wires": []
    },
    {
        "id": "784f3895.cd9148",
        "type": "aws-mqtt out",
        "z": "158fea19.4d1816",
        "device": "fe44d137.3a8728",
        "topic": "$aws/things/sensor-pt-<MAC>/shadow/get",
        "qos": 0,
        "x": 510,
        "y": 860,
        "wires": []
    },
    {
        "id": "f35f3c8b.deb228",
        "type": "comment",
        "z": "158fea19.4d1816",
        "name": "send request to get last shadow",
        "info": "",
        "x": 350,
        "y": 800,
        "wires": []
    },
    {
        "id": "c777400b.0135b8",
        "type": "function",
        "z": "158fea19.4d1816",
        "name": "get_shadow",
        "func": "msg.payload = null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 860,
        "wires": [
            [
                "784f3895.cd9148"
            ]
        ]
    },
    {
        "id": "1cbf6a92.152bad",
        "type": "debug",
        "z": "158fea19.4d1816",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 610,
        "y": 520,
        "wires": []
    },
    {
        "id": "5c96a135.97cbe8",
        "type": "comment",
        "z": "158fea19.4d1816",
        "name": "send update interval request to aws",
        "info": "",
        "x": 920,
        "y": 780,
        "wires": []
    },
    {
        "id": "5350f14.c25a49",
        "type": "comment",
        "z": "158fea19.4d1816",
        "name": "get interval from 'update' / 'get' data",
        "info": "",
        "x": 1080,
        "y": 420,
        "wires": []
    },
    {
        "id": "20677317.f5a8fc",
        "type": "switch",
        "z": "158fea19.4d1816",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "$exists(payload.state.reported.temperature)",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "$exists(payload.state.reported.pressure)",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "$exists(payload.state.reported.interval)",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "$exists(\t   payload.state.reported.connected\t) and $not(\t   $exists(\t       payload.state.reported.temperature\t   )\t) and $not(\t   $exists(\t       payload.state.reported.pressure\t   )\t)",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 790,
        "y": 280,
        "wires": [
            [
                "3a86d54c.9dc61a"
            ],
            [
                "5a27c49d.6245fc"
            ],
            [
                "5307b0d4.8ac088"
            ],
            [
                "3a86d54c.9dc61a",
                "5a27c49d.6245fc"
            ]
        ]
    },
    {
        "id": "a1f3dee0.80d238",
        "type": "debug",
        "z": "158fea19.4d1816",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 780,
        "y": 200,
        "wires": []
    },
    {
        "id": "2bb48c96.a888d4",
        "type": "debug",
        "z": "158fea19.4d1816",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 780,
        "y": 400,
        "wires": []
    },
    {
        "id": "f8241449.b85dd8",
        "type": "ui_text",
        "z": "158fea19.4d1816",
        "group": "f6269529.17aba8",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Digital pressure sensor (BMP180)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 660,
        "y": 80,
        "wires": []
    },
    {
        "id": "f6269529.17aba8",
        "type": "ui_group",
        "z": "",
        "name": "sensor-pt-<MAC>",
        "tab": "9d3bcf18.96b2b8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "fe44d137.3a8728",
        "type": "aws-iot-device",
        "z": "",
        "name": "sensor-pt-<MAC>",
        "mode": "broker",
        "clientId": "app-sensor-pt-<MAC>",
        "endpoint": "<ENDPOINT>",
        "awscerts": "/home/<USER>/.node-red/certs"
    },
    {
        "id": "9d3bcf18.96b2b8",
        "type": "ui_tab",
        "z": "",
        "name": "AWS Iot Sensor Demo",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e238620b.5c673",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    }
]
